{"version":3,"names":["React","createContext","useCallback","useImperativeHandle","useRef","getChessboardState","useChessEngine","useSetBoard","useBoardOperations","PieceRefsContext","SquareRefsContext","BoardRefsContextProviderComponent","forwardRef","ref","children","chess","board","setBoard","moveProgrammatically","generateBoardRefs","acc","x","length","row","y","col","String","fromCharCode","Math","round","square","pieceRefs","squareRefs","move","from","to","promotionPiece","seqNumber","current","moveTo","highlight","color","borderColor","backgroundColor","resetAllHighlightedSquares","reset","getState","resetBoard","fen","load","undo","BoardRefsContextProvider","memo"],"sources":["index.tsx"],"sourcesContent":["import type { Move, PieceType, Square } from 'chess.js';\nimport React, {\n  createContext,\n  useCallback,\n  useImperativeHandle,\n  useRef,\n} from 'react';\nimport {\n  ChessboardState,\n  getChessboardState,\n} from '../../helpers/get-chessboard-state';\nimport type { ChessPieceRef } from '../../components/piece';\nimport type { HighlightedSquareRefType } from '../../components/highlighted-squares/highlighted-square';\n\nimport { useChessEngine } from '../chess-engine-context/hooks';\nimport { useSetBoard } from '../board-context/hooks';\nimport { useBoardOperations } from '../board-operations-context/hooks';\n\nconst PieceRefsContext = createContext<React.MutableRefObject<Record<\n  Square,\n  React.MutableRefObject<ChessPieceRef>\n> | null> | null>(null);\n\nconst SquareRefsContext = createContext<React.MutableRefObject<Record<\n  Square,\n  React.MutableRefObject<HighlightedSquareRefType>\n> | null> | null>(null);\n\nexport type ChessboardRef = {\n  move: (_: {\n    from: Square;\n    to: Square;\n    promotionPiece?: PieceType;\n    seqNumber?: number;\n  }) => Promise<Move | undefined> | undefined;\n  highlight: (_: {\n    square: Square;\n    color?: string;\n    borderColor?: string;\n  }) => void;\n  resetAllHighlightedSquares: () => void;\n  resetBoard: (fen?: string) => void;\n  getState: () => ChessboardState;\n  undo: () => void;\n};\n\nexport type ChessboardContextRef = {\n  findKing: (type: 'wk' | 'bk') => Square | null;\n  checkIsCheckState: () => void;\n  checkIsCheckMateState: () => void;\n};\n\nconst BoardRefsContextProviderComponent = React.forwardRef<\n  ChessboardRef,\n  { children?: React.ReactNode }\n>(({ children }, ref) => {\n  const chess = useChessEngine();\n  const board = chess.board();\n  const setBoard = useSetBoard();\n  const { moveProgrammatically } = useBoardOperations();\n\n  // There must be a better way of doing this.\n  const generateBoardRefs = useCallback(() => {\n    let acc = {};\n    for (let x = 0; x < board.length; x++) {\n      const row = board[x];\n      for (let y = 0; y < row.length; y++) {\n        const col = String.fromCharCode(97 + Math.round(x));\n        // eslint-disable-next-line no-shadow\n        const row = `${8 - Math.round(y)}`;\n        const square = `${col}${row}` as Square;\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        acc = { ...acc, [square]: useRef(null) };\n      }\n    }\n    return acc as any;\n  }, [board]);\n\n  const pieceRefs: React.MutableRefObject<Record<\n    Square,\n    React.MutableRefObject<ChessPieceRef>\n  > | null> = useRef(generateBoardRefs());\n\n  const squareRefs: React.MutableRefObject<Record<\n    Square,\n    React.MutableRefObject<HighlightedSquareRefType>\n  > | null> = useRef(generateBoardRefs());\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      move: ({ from, to, promotionPiece, seqNumber }) => {\n        if (promotionPiece) {\n          moveProgrammatically(from, to, promotionPiece, seqNumber);\n        }\n\n        return pieceRefs?.current?.[from].current?.moveTo?.(to);\n      },\n      highlight: ({ square, color, borderColor }) => {\n        squareRefs.current?.[square].current.highlight({\n          backgroundColor: color,\n          borderColor,\n        });\n      },\n      resetAllHighlightedSquares: () => {\n        for (let x = 0; x < board.length; x++) {\n          const row = board[x];\n          for (let y = 0; y < row.length; y++) {\n            const col = String.fromCharCode(97 + Math.round(x));\n            // eslint-disable-next-line no-shadow\n            const row = `${8 - Math.round(y)}`;\n            const square = `${col}${row}` as Square;\n            squareRefs.current?.[square].current.reset();\n          }\n        }\n      },\n      getState: () => {\n        return getChessboardState(chess);\n      },\n      resetBoard: (fen) => {\n        chess.reset();\n        if (fen) chess.load(fen);\n        setBoard(chess.board());\n      },\n      undo: () => {\n        chess.undo();\n        setBoard(chess.board());\n      },\n    }),\n    [moveProgrammatically, board, chess, setBoard]\n  );\n\n  return (\n    <PieceRefsContext.Provider value={pieceRefs}>\n      <SquareRefsContext.Provider value={squareRefs}>\n        {children}\n      </SquareRefsContext.Provider>\n    </PieceRefsContext.Provider>\n  );\n});\n\nconst BoardRefsContextProvider = React.memo(BoardRefsContextProviderComponent);\n\nexport { PieceRefsContext, SquareRefsContext, BoardRefsContextProvider };\n"],"mappings":"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"}