{"version":3,"names":["Chess","React","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","useConst","BoardContext","BoardSetterContext","BoardOperationsContextProvider","BoardPromotionContextProvider","BoardRefsContextProvider","ChessEngineContext","useChessboardProps","ChessboardContextProviderComponent","forwardRef","ref","children","fen","chess","chessboardRef","boardOperationsRef","colors","checkmateHighlight","board","setBoard","highlight","params","current","findKing","type","x","length","row","y","col","String","fromCharCode","Math","round","square","piece","get","color","charAt","checkIsCheckState","isCheck","in_check","turn","borderColor","checkIsCheckMateState","isCheckmate","in_checkmate","chessboardController","move","resetAllHighlightedSquares","getState","resetBoard","reset","undo","chessboardContextController","ChessboardContextProvider","memo"],"sources":["board-context-provider.tsx"],"sourcesContent":["import { Chess, Square } from 'chess.js';\nimport React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport type { ChessboardState } from '../helpers/get-chessboard-state';\nimport { useConst } from '../hooks/use-const';\n\nimport { BoardContext, BoardSetterContext } from './board-context';\nimport {\n  BoardOperationsContextProvider,\n  BoardOperationsRef,\n} from './board-operations-context';\nimport { BoardPromotionContextProvider } from './board-promotion-context';\nimport {\n  BoardRefsContextProvider,\n  ChessboardContextRef,\n  ChessboardRef,\n} from './board-refs-context';\nimport { ChessEngineContext } from './chess-engine-context';\nimport { useChessboardProps } from './props-context/hooks';\n\ntype BoardContextProviderProps = {\n  fen?: string;\n  children?: React.ReactNode;\n};\n\nconst ChessboardContextProviderComponent = React.forwardRef<\n  ChessboardRef,\n  BoardContextProviderProps\n>(({ children, fen }, ref) => {\n  const chess = useConst(() => new Chess(fen));\n  const chessboardRef = useRef<ChessboardRef>(null);\n  const boardOperationsRef = useRef<BoardOperationsRef>(null);\n  const {\n    colors: { checkmateHighlight },\n  } = useChessboardProps();\n\n  const [board, setBoard] = useState(chess.board());\n\n  const highlight = useCallback(\n    (params) => chessboardRef.current?.highlight(params),\n    []\n  );\n\n  const findKing = useCallback(\n    (type: 'wk' | 'bk') => {\n      for (let x = 0; x < board.length; x++) {\n        const row = board[x];\n        for (let y = 0; y < row.length; y++) {\n          const col = String.fromCharCode(97 + Math.round(x));\n\n          // eslint-disable-next-line no-shadow\n          const row = `${8 - Math.round(y)}`;\n          const square = `${col}${row}` as Square;\n\n          const piece = chess.get(square);\n          if (piece?.color === type.charAt(0) && piece.type === type.charAt(1))\n            return square;\n        }\n      }\n      return null;\n    },\n    [chess, board]\n  );\n\n  const checkIsCheckState = useCallback(() => {\n    const isCheck = chess.in_check();\n\n    if (isCheck) {\n      const square = findKing(`${chess.turn()}k`);\n      if (!square) return;\n      highlight({\n        square,\n        color: 'transparent',\n        borderColor: checkmateHighlight,\n      });\n    }\n  }, [chess, findKing, highlight, checkmateHighlight]);\n\n  const checkIsCheckMateState = useCallback(() => {\n    const isCheckmate = chess.in_checkmate();\n\n    if (isCheckmate) {\n      const square = findKing(`${chess.turn()}k`);\n      if (!square) return;\n      highlight({ square, color: checkmateHighlight });\n    }\n  }, [chess, findKing, highlight, checkmateHighlight]);\n\n  useEffect(() => {\n    if (fen) {\n      checkIsCheckState();\n      checkIsCheckMateState();\n    }\n    /*\n     * here `eslint-disable-next-line` is used\n     * because we would like this `useEffect` only triggered on `fen` changes,\n     * but not the used callbacks updates\n     * */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fen]);\n\n  const chessboardController: ChessboardRef = useMemo(() => {\n    return {\n      move: (params) => chessboardRef.current?.move?.(params),\n      highlight,\n      resetAllHighlightedSquares: () =>\n        chessboardRef.current?.resetAllHighlightedSquares(),\n      getState: () => chessboardRef?.current?.getState() as ChessboardState,\n      resetBoard: (params) => {\n        chessboardRef.current?.resetBoard(params);\n        boardOperationsRef.current?.reset();\n      },\n      undo: () => {\n        chessboardRef.current?.undo();\n        boardOperationsRef.current?.reset();\n      },\n    };\n  }, [highlight]);\n\n  const chessboardContextController: ChessboardContextRef = useMemo(() => {\n    return {\n      findKing,\n      checkIsCheckState,\n      checkIsCheckMateState,\n    };\n  }, [findKing, checkIsCheckState, checkIsCheckMateState]);\n\n  useImperativeHandle(ref, () => chessboardController, [chessboardController]);\n\n  return (\n    <BoardContext.Provider value={board}>\n      <BoardPromotionContextProvider>\n        <ChessEngineContext.Provider value={chess}>\n          <BoardSetterContext.Provider value={setBoard}>\n            <BoardOperationsContextProvider\n              ref={boardOperationsRef}\n              controller={chessboardController}\n              contextController={chessboardContextController}\n            >\n              <BoardRefsContextProvider ref={chessboardRef}>\n                {children}\n              </BoardRefsContextProvider>\n            </BoardOperationsContextProvider>\n          </BoardSetterContext.Provider>\n        </ChessEngineContext.Provider>\n      </BoardPromotionContextProvider>\n    </BoardContext.Provider>\n  );\n});\n\nconst ChessboardContextProvider = React.memo(\n  ChessboardContextProviderComponent\n);\nexport {\n  ChessboardContextProvider,\n  ChessEngineContext,\n  BoardContext,\n  BoardSetterContext,\n};\n"],"mappings":"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"}