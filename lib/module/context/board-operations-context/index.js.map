{"version":3,"names":["React","createContext","useCallback","useImperativeHandle","useMemo","useState","useSharedValue","getChessboardState","useReversePiecePosition","useSetBoard","useBoardPromotion","usePieceRefs","useChessEngine","useChessboardProps","BoardOperationsContext","BoardOperationsContextProviderComponent","forwardRef","ref","children","controller","contextController","chess","setBoard","pieceSize","onMove","onChessboardMoveCallback","playersColor","toTranslation","isBlackPiecePosition","selectableSquares","selectedSquare","showPromotionDialog","pieceRefs","isPieceGestureInProgress","setIsPieceGestureInProgress","turn","reset","value","resetAllHighlightedSquares","isPromoting","from","to","includes","val","x","Math","floor","y","piece","board","type","PAWN","color","WHITE","BLACK","moveProgrammatically","promotionPiece","seqNumber","move","promotion","checkIsCheckState","checkIsCheckMateState","state","in_promotion","lastMove","highlight","square","chessTurn","current","enable","onSelect","onSelectPiece","validSquares","moves","map","splittedSquare","split","length","splittedSquareValue","moveTo","BoardOperationsContextProvider","memo"],"sources":["index.tsx"],"sourcesContent":["import type { PieceType, Square } from 'chess.js';\nimport React, {\n  createContext,\n  useCallback,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { useSharedValue } from 'react-native-reanimated';\nimport { getChessboardState } from '../../helpers/get-chessboard-state';\n\nimport { useReversePiecePosition } from '../../notation';\nimport { useSetBoard } from '../board-context/hooks';\nimport { useBoardPromotion } from '../board-promotion-context/hooks';\nimport type {\n  ChessboardContextRef,\n  ChessboardRef,\n} from '../board-refs-context';\nimport { usePieceRefs } from '../board-refs-context/hooks';\nimport { useChessEngine } from '../chess-engine-context/hooks';\nimport { useChessboardProps } from '../props-context/hooks';\n\ntype BoardOperationsContextType = {\n  selectableSquares: Animated.SharedValue<Square[]>;\n  onMove: (from: Square, to: Square) => void;\n  onSelectPiece: (square: Square) => void;\n  moveTo: (to: Square) => void;\n  isPromoting: (from: Square, to: Square) => boolean;\n  selectedSquare: Animated.SharedValue<Square | null>;\n  turn: Animated.SharedValue<'w' | 'b'>;\n  moveProgrammatically: (\n    from: Square,\n    to: Square,\n    promotionPiece?: PieceType,\n    seqNumber?: number\n  ) => void;\n  isPieceGestureInProgress: boolean;\n  setIsPieceGestureInProgress: (value: boolean) => void;\n};\n\nconst BoardOperationsContext = createContext<BoardOperationsContextType>(\n  {} as any\n);\n\nexport type BoardOperationsRef = {\n  reset: () => void;\n};\n\nconst BoardOperationsContextProviderComponent = React.forwardRef<\n  BoardOperationsRef,\n  {\n    controller?: ChessboardRef;\n    contextController?: ChessboardContextRef;\n    children?: React.ReactNode;\n  }\n>(({ children, controller, contextController }, ref) => {\n  const chess = useChessEngine();\n  const setBoard = useSetBoard();\n  const {\n    pieceSize,\n    onMove: onChessboardMoveCallback,\n    playersColor,\n  } = useChessboardProps();\n  const { toTranslation, isBlackPiecePosition } = useReversePiecePosition();\n  const selectableSquares = useSharedValue<Square[]>([]);\n  const selectedSquare = useSharedValue<Square | null>(null);\n  const { showPromotionDialog } = useBoardPromotion();\n  const pieceRefs = usePieceRefs();\n  const [isPieceGestureInProgress, setIsPieceGestureInProgress] =\n    useState<boolean>(false);\n\n  const turn = useSharedValue(chess.turn());\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      reset: () => {\n        selectableSquares.value = [];\n        controller?.resetAllHighlightedSquares();\n        turn.value = chess.turn();\n      },\n    }),\n    [chess, controller, selectableSquares, turn]\n  );\n\n  const isPromoting = useCallback(\n    (from: Square, to: Square) => {\n      if (!to.includes('8') && !to.includes('1')) return false;\n\n      const val = toTranslation(from);\n      const x = Math.floor(val.x / pieceSize);\n      const y = Math.floor(val.y / pieceSize);\n\n      const piece = chess.board()[y][x];\n\n      return (\n        piece?.type === chess.PAWN &&\n        ((to.includes('8') && piece.color === chess.WHITE) ||\n          (to.includes('1') && piece.color === chess.BLACK))\n      );\n    },\n    [chess, pieceSize, toTranslation]\n  );\n\n  const moveProgrammatically = useCallback(\n    (\n      from: Square,\n      to: Square,\n      promotionPiece?: PieceType,\n      seqNumber?: number\n    ) => {\n      const move = chess.move({\n        from,\n        to,\n        promotion: promotionPiece as any,\n      });\n\n      turn.value = chess.turn();\n\n      if (move == null) return;\n\n      contextController?.checkIsCheckState();\n      contextController?.checkIsCheckMateState();\n\n      onChessboardMoveCallback?.({\n        move,\n        state: {\n          ...getChessboardState(chess),\n          in_promotion: promotionPiece != null,\n        },\n        seqNumber,\n      });\n\n      setBoard(chess.board());\n    },\n    [chess, contextController, onChessboardMoveCallback, setBoard, turn]\n  );\n\n  const onMove = useCallback(\n    (from: Square, to: Square) => {\n      selectableSquares.value = [];\n      selectedSquare.value = null;\n      const lastMove = { from, to };\n      controller?.resetAllHighlightedSquares();\n      controller?.highlight({ square: lastMove.from });\n      controller?.highlight({ square: lastMove.to });\n\n      const in_promotion = isPromoting(from, to);\n      if (!in_promotion) {\n        moveProgrammatically(from, to);\n        return;\n      }\n\n      const chessTurn = chess.turn();\n\n      if (chessTurn === playersColor) {\n        pieceRefs?.current?.[to]?.current?.enable(false);\n        showPromotionDialog({\n          type: chessTurn,\n          onSelect: (piece) => {\n            moveProgrammatically(from, to, piece);\n            pieceRefs?.current?.[to]?.current?.enable(true);\n          },\n        });\n      }\n    },\n    [\n      chess,\n      controller,\n      isPromoting,\n      moveProgrammatically,\n      pieceRefs,\n      selectableSquares,\n      selectedSquare,\n      showPromotionDialog,\n      playersColor,\n    ]\n  );\n\n  const onSelectPiece = useCallback(\n    (square: Square) => {\n      selectedSquare.value = square;\n\n      const validSquares = (chess.moves({\n        square,\n      }) ?? []) as Square[];\n\n      // eslint-disable-next-line no-shadow\n      selectableSquares.value = validSquares.map((square) => {\n        const splittedSquare = square.split('x');\n        if (splittedSquare.length === 0) {\n          return square;\n        }\n\n        const splittedSquareValue = splittedSquare[splittedSquare.length - 1];\n\n        if (splittedSquareValue === 'O-O') {\n          if (isBlackPiecePosition) {\n            return 'Kg8' as Square;\n          }\n\n          return 'Kg1' as Square;\n        }\n\n        if (splittedSquareValue === 'O-O-O') {\n          if (isBlackPiecePosition) {\n            return 'Kc8' as Square;\n          }\n\n          return 'Kc1' as Square;\n        }\n\n        return splittedSquare[splittedSquare.length - 1] as Square;\n      });\n    },\n    [chess, selectableSquares, selectedSquare, isBlackPiecePosition]\n  );\n\n  const moveTo = useCallback(\n    (to: Square) => {\n      if (selectedSquare.value != null) {\n        controller?.move({ from: selectedSquare.value, to: to });\n        return true;\n      }\n      return false;\n    },\n    [controller, selectedSquare.value]\n  );\n\n  const value = useMemo(() => {\n    return {\n      onMove,\n      onSelectPiece,\n      moveTo,\n      selectableSquares,\n      selectedSquare,\n      isPromoting,\n      turn,\n      moveProgrammatically,\n      isPieceGestureInProgress,\n      setIsPieceGestureInProgress,\n    };\n  }, [\n    isPromoting,\n    moveTo,\n    onMove,\n    onSelectPiece,\n    selectableSquares,\n    selectedSquare,\n    turn,\n    moveProgrammatically,\n    isPieceGestureInProgress,\n    setIsPieceGestureInProgress,\n  ]);\n\n  return (\n    <BoardOperationsContext.Provider value={value}>\n      {children}\n    </BoardOperationsContext.Provider>\n  );\n});\n\nconst BoardOperationsContextProvider = React.memo(\n  BoardOperationsContextProviderComponent\n);\n\nexport { BoardOperationsContextProvider, BoardOperationsContext };\n"],"mappings":"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"}