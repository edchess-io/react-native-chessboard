{"version":3,"names":["React","useCallback","useImperativeHandle","useMemo","useState","Gesture","GestureDetector","Animated","runOnJS","useAnimatedStyle","useDerivedValue","useSharedValue","withTiming","useChessboardProps","useBoardOperations","useBoardPromotion","usePieceRefs","useChessEngine","useReversePiecePosition","ChessPiece","Piece","memo","forwardRef","ref","id","startPosition","square","size","chess","refs","pieceEnabled","isPromoting","onSelectPiece","onMove","selectedSquare","turn","isPieceGestureInProgress","setIsPieceGestureInProgress","isPieceActive","setIsPieceActive","pieceSize","durations","move","moveDuration","gestureEnabled","gestureEnabledFromChessboardProps","playersColor","value","charAt","toPosition","toTranslation","isBlackPiecePosition","isGestureActive","offsetX","offsetY","borderColor","translateX","x","translateY","y","validateMove","from","to","moves","verbose","find","m","wrappedOnMoveForJSThread","moveTo","Promise","resolve","duration","isFinished","undefined","movePiece","enable","active","onStartTap","globalMoveTo","current","handleOnBegin","currentSquare","previousTappedSquare","gestureProgress","Pan","enabled","onBegin","onStart","onUpdate","translationX","translationY","onEnd","onFinalize","gestureDisabled","gesture","style","justifyContent","alignItems","position","zIndex","borderWidth","backgroundColor","boxSize","width","height","transform","rotate","underlay","translation","borderRadius","prev","next"],"sources":["index.tsx"],"sourcesContent":["import type { Move, Square } from 'chess.js';\nimport React, {\n  useCallback,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport Animated, {\n  runOnJS,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\nimport { useChessboardProps } from '../../context/props-context/hooks';\nimport { useBoardOperations } from '../../context/board-operations-context/hooks';\nimport { useBoardPromotion } from '../../context/board-promotion-context/hooks';\nimport { usePieceRefs } from '../../context/board-refs-context/hooks';\nimport { useChessEngine } from '../../context/chess-engine-context/hooks';\nimport { useReversePiecePosition } from '../../notation';\nimport type { PieceType, Vector } from '../../types';\n\nimport { ChessPiece } from './visual-piece';\n\ntype PieceProps = {\n  id: PieceType;\n  startPosition: Vector;\n  square: Square;\n  size: number;\n};\n\nexport type ChessPieceRef = {\n  moveTo: (square: Square) => Promise<Move | undefined>;\n  enable: (activate: boolean) => void;\n};\n\nconst Piece = React.memo(\n  React.forwardRef<ChessPieceRef, PieceProps>(\n    ({ id, startPosition, square, size }, ref) => {\n      const chess = useChessEngine();\n      const refs = usePieceRefs();\n      const pieceEnabled = useSharedValue(true);\n      const { isPromoting } = useBoardPromotion();\n      const {\n        onSelectPiece,\n        onMove,\n        selectedSquare,\n        turn,\n        isPieceGestureInProgress,\n        setIsPieceGestureInProgress,\n      } = useBoardOperations();\n\n      const [isPieceActive, setIsPieceActive] = useState<boolean>(false);\n\n      const {\n        pieceSize,\n        durations: { move: moveDuration },\n        gestureEnabled: gestureEnabledFromChessboardProps,\n        playersColor,\n      } = useChessboardProps();\n\n      const gestureEnabled = useDerivedValue(\n        () =>\n          turn.value === id.charAt(0) &&\n          turn.value === playersColor &&\n          gestureEnabledFromChessboardProps,\n        [id, gestureEnabledFromChessboardProps]\n      );\n\n      const { toPosition, toTranslation, isBlackPiecePosition } =\n        useReversePiecePosition();\n\n      const isGestureActive = useSharedValue(false);\n      const offsetX = useSharedValue(0);\n      const offsetY = useSharedValue(0);\n      const borderColor = useSharedValue(1);\n      const translateX = useSharedValue(startPosition.x * size);\n      const translateY = useSharedValue(startPosition.y * size);\n\n      const validateMove = useCallback(\n        (from: Square, to: Square) => {\n          return chess\n            .moves({ verbose: true })\n            .find((m) => m.from === from && m.to === to);\n        },\n        [chess]\n      );\n\n      const wrappedOnMoveForJSThread = useCallback(\n        ({ move }: { move: Move }) => {\n          onMove(move.from, move.to);\n        },\n        [onMove]\n      );\n\n      const moveTo = useCallback(\n        (from: Square, to: Square) => {\n          return new Promise<Move | undefined>((resolve) => {\n            const move = validateMove(from, to);\n            const { x, y } = toTranslation(move ? move.to : from);\n            translateX.value = withTiming(x, { duration: moveDuration }, () => {\n              offsetX.value = translateX.value;\n            });\n            translateY.value = withTiming(\n              y,\n              { duration: moveDuration },\n              (isFinished) => {\n                if (!isFinished) return;\n                offsetY.value = translateY.value;\n                isGestureActive.value = false;\n                if (move) {\n                  runOnJS(wrappedOnMoveForJSThread)({ move });\n                  // Ideally I must call the resolve method\n                  // inside the \"wrappedOnMoveForJSThread\" after\n                  // the \"onMove\" function.\n                  // Unfortunately I'm not able to pass a\n                  // function in the RunOnJS params\n                  runOnJS(resolve)(move);\n                } else {\n                  runOnJS(resolve)(undefined);\n                }\n              }\n            );\n          });\n        },\n        [\n          isGestureActive,\n          moveDuration,\n          offsetX,\n          offsetY,\n          toTranslation,\n          translateX,\n          translateY,\n          validateMove,\n          wrappedOnMoveForJSThread,\n        ]\n      );\n\n      const movePiece = useCallback(\n        (to: Square) => {\n          const from = toPosition({ x: offsetX.value, y: offsetY.value });\n          moveTo(from, to);\n        },\n        [moveTo, offsetX.value, offsetY.value, toPosition]\n      );\n\n      useImperativeHandle(\n        ref,\n        () => {\n          return {\n            moveTo: (to: Square) => {\n              return moveTo(square, to);\n            },\n            enable: (active: boolean) => {\n              pieceEnabled.value = active;\n            },\n          };\n        },\n        [moveTo, pieceEnabled, square]\n      );\n\n      const onStartTap = useCallback(\n        // eslint-disable-next-line no-shadow\n        (square: Square) => {\n          'worklet';\n          if (!onSelectPiece) {\n            return;\n          }\n          runOnJS(onSelectPiece)(square);\n        },\n        [onSelectPiece]\n      );\n\n      const globalMoveTo = useCallback(\n        (move: Move) => {\n          refs?.current?.[move.from].current?.moveTo?.(move.to);\n        },\n        [refs]\n      );\n\n      const handleOnBegin = useCallback(() => {\n        const currentSquare = toPosition({\n          x: translateX.value,\n          y: translateY.value,\n        });\n\n        const previousTappedSquare = selectedSquare.value;\n        const move =\n          previousTappedSquare &&\n          validateMove(previousTappedSquare, currentSquare);\n\n        if (move) {\n          runOnJS(globalMoveTo)(move);\n          return;\n        }\n        if (!gestureEnabled.value) return;\n        borderColor.value = withTiming(0);\n        onStartTap(square);\n      }, [\n        borderColor,\n        gestureEnabled.value,\n        globalMoveTo,\n        onStartTap,\n        selectedSquare.value,\n        square,\n        toPosition,\n        translateX.value,\n        translateY.value,\n        validateMove,\n      ]);\n\n      const gestureProgress = Gesture.Pan()\n        .enabled(!isPromoting && pieceEnabled.value)\n        .onBegin(() => {\n          runOnJS(setIsPieceActive)(true);\n          runOnJS(setIsPieceGestureInProgress)(true);\n          offsetX.value = translateX.value;\n          offsetY.value = translateY.value;\n          runOnJS(handleOnBegin)();\n        })\n        .onStart(() => {\n          if (!gestureEnabled.value) return;\n          isGestureActive.value = true;\n        })\n        .onUpdate(({ translationX, translationY }) => {\n          if (!gestureEnabled.value) return;\n\n          if (isBlackPiecePosition) {\n            translateX.value = offsetX.value - translationX;\n            translateY.value = offsetY.value - translationY;\n\n            return;\n          }\n\n          translateX.value = offsetX.value + translationX;\n          translateY.value = offsetY.value + translationY;\n        })\n        .onEnd(() => {\n          if (!gestureEnabled.value) return;\n          runOnJS(movePiece)(\n            toPosition({ x: translateX.value, y: translateY.value })\n          );\n        })\n        .onFinalize(() => {\n          runOnJS(setIsPieceActive)(false);\n          runOnJS(setIsPieceGestureInProgress)(false);\n          borderColor.value = withTiming(1);\n        });\n\n      const gestureDisabled = Gesture.Pan().enabled(false);\n\n      const gesture = useMemo(() => {\n        if (isPieceGestureInProgress && !isPieceActive) {\n          return gestureDisabled;\n        }\n\n        return gestureProgress;\n      }, [\n        isPieceGestureInProgress,\n        isPieceActive,\n        gestureProgress,\n        gestureDisabled,\n      ]);\n\n      const style = useAnimatedStyle(() => {\n        if (isBlackPiecePosition) {\n          return {\n            justifyContent: 'center',\n            alignItems: 'center',\n            position: 'absolute',\n            zIndex: selectedSquare.value ? 100 : 10,\n            borderWidth: 0,\n            backgroundColor:\n              selectedSquare.value === square && !isGestureActive.value\n                ? 'rgba(151, 189, 227, 0.50)' //`rgba(44, 141, 255, ${(borderColor.value / 5).toFixed(2)})`\n                : 'transparent',\n            boxSize: 'border-box',\n            width: pieceSize,\n            height: pieceSize,\n            transform: [\n              { translateX: translateX.value },\n              { translateY: translateY.value },\n              { rotate: '180deg' },\n            ],\n          };\n        }\n\n        return {\n          justifyContent: 'center',\n          alignItems: 'center',\n          position: 'absolute',\n          zIndex: selectedSquare.value ? 100 : 10,\n          borderWidth: 0,\n          backgroundColor:\n            selectedSquare.value === square && !isGestureActive.value\n              ? 'rgba(151, 189, 227, 0.50)' //`rgba(44, 141, 255, ${(borderColor.value / 5).toFixed(2)})`\n              : 'transparent',\n          boxSize: 'border-box',\n          width: pieceSize,\n          height: pieceSize,\n          transform: [\n            { translateX: translateX.value },\n            { translateY: translateY.value },\n          ],\n        };\n      }, [selectedSquare.value, isBlackPiecePosition]);\n\n      const underlay = useAnimatedStyle(() => {\n        const position = toPosition({\n          x: translateX.value,\n          y: translateY.value,\n        });\n        const translation = toTranslation(position);\n        return {\n          position: 'absolute',\n          width: size * 2,\n          height: size * 2,\n          borderRadius: size,\n          zIndex: 0,\n          backgroundColor: 'transparent',\n          transform: [\n            { translateX: translation.x - size / 2 },\n            { translateY: translation.y - size / 2 },\n          ],\n        };\n      }, [size]);\n\n      return (\n        <>\n          <Animated.View style={underlay} />\n          <GestureDetector gesture={gesture}>\n            <Animated.View style={style}>\n              <ChessPiece id={id} />\n            </Animated.View>\n          </GestureDetector>\n        </>\n      );\n    }\n  ),\n  (prev, next) =>\n    prev.id === next.id &&\n    prev.size === next.size &&\n    prev.square === next.square\n);\n\nexport default Piece;\n"],"mappings":"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"}