{"version":3,"names":["ChessboardContextProviderComponent","React","forwardRef","ref","children","fen","chess","useConst","Chess","chessboardRef","useRef","boardOperationsRef","colors","checkmateHighlight","useChessboardProps","board","setBoard","useState","highlight","useCallback","params","current","findKing","type","x","length","row","y","col","String","fromCharCode","Math","round","square","piece","get","color","charAt","checkIsCheckState","isCheck","in_check","turn","borderColor","checkIsCheckMateState","isCheckmate","in_checkmate","useEffect","chessboardController","useMemo","move","resetAllHighlightedSquares","getState","resetBoard","reset","undo","chessboardContextController","useImperativeHandle","ChessboardContextProvider","memo"],"sources":["board-context-provider.tsx"],"sourcesContent":["import { Chess, Square } from 'chess.js';\nimport React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport type { ChessboardState } from '../helpers/get-chessboard-state';\nimport { useConst } from '../hooks/use-const';\n\nimport { BoardContext, BoardSetterContext } from './board-context';\nimport {\n  BoardOperationsContextProvider,\n  BoardOperationsRef,\n} from './board-operations-context';\nimport { BoardPromotionContextProvider } from './board-promotion-context';\nimport {\n  BoardRefsContextProvider,\n  ChessboardContextRef,\n  ChessboardRef,\n} from './board-refs-context';\nimport { ChessEngineContext } from './chess-engine-context';\nimport { useChessboardProps } from './props-context/hooks';\n\ntype BoardContextProviderProps = {\n  fen?: string;\n  children?: React.ReactNode;\n};\n\nconst ChessboardContextProviderComponent = React.forwardRef<\n  ChessboardRef,\n  BoardContextProviderProps\n>(({ children, fen }, ref) => {\n  const chess = useConst(() => new Chess(fen));\n  const chessboardRef = useRef<ChessboardRef>(null);\n  const boardOperationsRef = useRef<BoardOperationsRef>(null);\n  const {\n    colors: { checkmateHighlight },\n  } = useChessboardProps();\n\n  const [board, setBoard] = useState(chess.board());\n\n  const highlight = useCallback(\n    (params) => chessboardRef.current?.highlight(params),\n    []\n  );\n\n  const findKing = useCallback(\n    (type: 'wk' | 'bk') => {\n      for (let x = 0; x < board.length; x++) {\n        const row = board[x];\n        for (let y = 0; y < row.length; y++) {\n          const col = String.fromCharCode(97 + Math.round(x));\n\n          // eslint-disable-next-line no-shadow\n          const row = `${8 - Math.round(y)}`;\n          const square = `${col}${row}` as Square;\n\n          const piece = chess.get(square);\n          if (piece?.color === type.charAt(0) && piece.type === type.charAt(1))\n            return square;\n        }\n      }\n      return null;\n    },\n    [chess, board]\n  );\n\n  const checkIsCheckState = useCallback(() => {\n    const isCheck = chess.in_check();\n\n    if (isCheck) {\n      const square = findKing(`${chess.turn()}k`);\n      if (!square) return;\n      highlight({\n        square,\n        color: 'transparent',\n        borderColor: checkmateHighlight,\n      });\n    }\n  }, [chess, findKing, highlight, checkmateHighlight]);\n\n  const checkIsCheckMateState = useCallback(() => {\n    const isCheckmate = chess.in_checkmate();\n\n    if (isCheckmate) {\n      const square = findKing(`${chess.turn()}k`);\n      if (!square) return;\n      highlight({ square, color: checkmateHighlight });\n    }\n  }, [chess, findKing, highlight, checkmateHighlight]);\n\n  useEffect(() => {\n    if (fen) {\n      checkIsCheckState();\n      checkIsCheckMateState();\n    }\n    /*\n     * here `eslint-disable-next-line` is used\n     * because we would like this `useEffect` only triggered on `fen` changes,\n     * but not the used callbacks updates\n     * */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fen]);\n\n  const chessboardController: ChessboardRef = useMemo(() => {\n    return {\n      move: (params) => chessboardRef.current?.move?.(params),\n      highlight,\n      resetAllHighlightedSquares: () =>\n        chessboardRef.current?.resetAllHighlightedSquares(),\n      getState: () => chessboardRef?.current?.getState() as ChessboardState,\n      resetBoard: (params) => {\n        chessboardRef.current?.resetBoard(params);\n        boardOperationsRef.current?.reset();\n      },\n      undo: () => {\n        chessboardRef.current?.undo();\n        boardOperationsRef.current?.reset();\n      },\n    };\n  }, [highlight]);\n\n  const chessboardContextController: ChessboardContextRef = useMemo(() => {\n    return {\n      findKing,\n      checkIsCheckState,\n      checkIsCheckMateState,\n    };\n  }, [findKing, checkIsCheckState, checkIsCheckMateState]);\n\n  useImperativeHandle(ref, () => chessboardController, [chessboardController]);\n\n  return (\n    <BoardContext.Provider value={board}>\n      <BoardPromotionContextProvider>\n        <ChessEngineContext.Provider value={chess}>\n          <BoardSetterContext.Provider value={setBoard}>\n            <BoardOperationsContextProvider\n              ref={boardOperationsRef}\n              controller={chessboardController}\n              contextController={chessboardContextController}\n            >\n              <BoardRefsContextProvider ref={chessboardRef}>\n                {children}\n              </BoardRefsContextProvider>\n            </BoardOperationsContextProvider>\n          </BoardSetterContext.Provider>\n        </ChessEngineContext.Provider>\n      </BoardPromotionContextProvider>\n    </BoardContext.Provider>\n  );\n});\n\nconst ChessboardContextProvider = React.memo(\n  ChessboardContextProviderComponent\n);\nexport {\n  ChessboardContextProvider,\n  ChessEngineContext,\n  BoardContext,\n  BoardSetterContext,\n};\n"],"mappings":"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"}