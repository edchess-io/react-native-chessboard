{"version":3,"names":["HighlightedSquares","React","memo","chess","useChessEngine","board","useMemo","pieceSize","useChessboardProps","toPosition","toTranslation","calculatePosition","useReversePiecePosition","refs","useSquareRefs","StyleSheet","absoluteFillObject","map","row","y","_","x","calculatedX","calculatedY","square","translation","current","styles","highlightedSquare","width","transform","translateX","translateY","create","position","aspectRatio"],"sources":["index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { useChessboardProps } from '../../context/props-context/hooks';\n\nimport { useChessEngine } from '../../context/chess-engine-context/hooks';\nimport { useReversePiecePosition } from '../../notation';\nimport { HighlightedSquare } from './highlighted-square';\nimport { useSquareRefs } from '../../context/board-refs-context/hooks';\n\nconst HighlightedSquares: React.FC = React.memo(() => {\n  const chess = useChessEngine();\n  const board = useMemo(() => chess.board(), [chess]);\n  const { pieceSize } = useChessboardProps();\n  const { toPosition, toTranslation, calculatePosition } =\n    useReversePiecePosition();\n  const refs = useSquareRefs();\n\n  return (\n    <View\n      style={{\n        ...StyleSheet.absoluteFillObject,\n      }}\n    >\n      {board.map((row, y) =>\n        row.map((_, x) => {\n          const { x: calculatedX, y: calculatedY } = calculatePosition({\n            x,\n            y,\n          });\n\n          const square = toPosition({\n            x: calculatedX * pieceSize,\n            y: calculatedY * pieceSize,\n          });\n\n          const translation = toTranslation(square);\n\n          return (\n            <HighlightedSquare\n              key={`${calculatedX}-${calculatedY}`}\n              ref={refs?.current?.[square]}\n              style={[\n                styles.highlightedSquare,\n                {\n                  width: pieceSize,\n                  transform: [\n                    { translateX: translation.x },\n                    { translateY: translation.y },\n                  ],\n                },\n              ]}\n            />\n          );\n        })\n      )}\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  highlightedSquare: {\n    position: 'absolute',\n    aspectRatio: 1,\n  },\n});\n\nexport { HighlightedSquares };\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,kBAA4B,gBAAGC,cAAA,CAAMC,IAAN,CAAW,MAAM;EACpD,MAAMC,KAAK,GAAG,IAAAC,sBAAA,GAAd;EACA,MAAMC,KAAK,GAAG,IAAAC,cAAA,EAAQ,MAAMH,KAAK,CAACE,KAAN,EAAd,EAA6B,CAACF,KAAD,CAA7B,CAAd;EACA,MAAM;IAAEI;EAAF,IAAgB,IAAAC,yBAAA,GAAtB;EACA,MAAM;IAAEC,UAAF;IAAcC,aAAd;IAA6BC;EAA7B,IACJ,IAAAC,iCAAA,GADF;EAEA,MAAMC,IAAI,GAAG,IAAAC,qBAAA,GAAb;EAEA,oBACE,6BAAC,iBAAD;IACE,KAAK,EAAE,EACL,GAAGC,uBAAA,CAAWC;IADT;EADT,GAKGX,KAAK,CAACY,GAAN,CAAU,CAACC,GAAD,EAAMC,CAAN,KACTD,GAAG,CAACD,GAAJ,CAAQ,CAACG,CAAD,EAAIC,CAAJ,KAAU;IAAA;;IAChB,MAAM;MAAEA,CAAC,EAAEC,WAAL;MAAkBH,CAAC,EAAEI;IAArB,IAAqCZ,iBAAiB,CAAC;MAC3DU,CAD2D;MAE3DF;IAF2D,CAAD,CAA5D;IAKA,MAAMK,MAAM,GAAGf,UAAU,CAAC;MACxBY,CAAC,EAAEC,WAAW,GAAGf,SADO;MAExBY,CAAC,EAAEI,WAAW,GAAGhB;IAFO,CAAD,CAAzB;IAKA,MAAMkB,WAAW,GAAGf,aAAa,CAACc,MAAD,CAAjC;IAEA,oBACE,6BAAC,oCAAD;MACE,GAAG,EAAG,GAAEF,WAAY,IAAGC,WAAY,EADrC;MAEE,GAAG,EAAEV,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAEa,OAAR,kDAAE,cAAgBF,MAAhB,CAFP;MAGE,KAAK,EAAE,CACLG,MAAM,CAACC,iBADF,EAEL;QACEC,KAAK,EAAEtB,SADT;QAEEuB,SAAS,EAAE,CACT;UAAEC,UAAU,EAAEN,WAAW,CAACJ;QAA1B,CADS,EAET;UAAEW,UAAU,EAAEP,WAAW,CAACN;QAA1B,CAFS;MAFb,CAFK;IAHT,EADF;EAgBD,CA7BD,CADD,CALH,CADF;AAwCD,CAhDoC,CAArC;;;;AAkDA,MAAMQ,MAAM,GAAGZ,uBAAA,CAAWkB,MAAX,CAAkB;EAC/BL,iBAAiB,EAAE;IACjBM,QAAQ,EAAE,UADO;IAEjBC,WAAW,EAAE;EAFI;AADY,CAAlB,CAAf"}